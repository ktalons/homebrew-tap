name: Update Homebrew Formula

on:
  workflow_dispatch:
    inputs:
      tag:
        description: "Tag to update to (e.g., v0.1.0). If empty, auto-detect."
        required: false
      asset_name:
        description: "Asset filename to select from the release (e.g., PCAPpullerGUI-macos)."
        required: false
        default: PCAPpullerGUI-macos
  release:
    types: [published, prereleased]
  schedule:
    - cron: '0 6 * * *'

permissions:
  contents: write

jobs:
  update:
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout tap repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: true

      - name: Sync with remote main
        run: |
          set -euo pipefail
          git fetch --prune origin main
          git checkout main
          git pull --rebase origin main

      - name: Set up tools
        run: |
          sudo apt-get update
          sudo apt-get install -y jq curl

      - name: Determine tag and asset
        id: meta
        shell: bash
        env:
          OWNER_REPO: ktalons/daPCAPpuller
          ASSET_NAME_INPUT: ${{ github.event.inputs.asset_name }}
          INPUT_TAG: ${{ github.event.inputs.tag }}
          RELEASE_TAG: ${{ github.event.release.tag_name }}
        run: |
          set -euo pipefail
          # Resolve TAG: prefer workflow input, then release event tag, else latest stable, else most recent (including prereleases)
          if [ -n "${INPUT_TAG:-}" ]; then
            TAG="$INPUT_TAG"
          elif [ -n "${RELEASE_TAG:-}" ]; then
            TAG="$RELEASE_TAG"
          else
            TAG=$(curl -sS \
              -H "Accept: application/vnd.github+json" \
              -H "Authorization: Bearer ${GITHUB_TOKEN}" \
              -H "X-GitHub-Api-Version: 2022-11-28" \
              "https://api.github.com/repos/${OWNER_REPO}/releases/latest" | jq -r '.tag_name // empty')
            if [ -z "$TAG" ]; then
              TAG=$(curl -sS \
                -H "Accept: application/vnd.github+json" \
                -H "Authorization: Bearer ${GITHUB_TOKEN}" \
                -H "X-GitHub-Api-Version: 2022-11-28" \
                "https://api.github.com/repos/${OWNER_REPO}/releases?per_page=1" | jq -r '.[0].tag_name // empty')
            fi
          fi
          if [ -z "$TAG" ]; then
            echo "No release tag found for ${OWNER_REPO}" >&2; exit 1
          fi
          echo "tag=$TAG" >> "$GITHUB_OUTPUT"

          # Resolve asset URL for the release tag
          # Allow overriding asset name via workflow_dispatch input; default to macOS binary
          ASSET_NAME="${ASSET_NAME_INPUT:-PCAPpullerGUI-macos}"
          release_json=$(curl -sS \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${GITHUB_TOKEN}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            "https://api.github.com/repos/${OWNER_REPO}/releases/tags/${TAG}")
          URL=$(echo "$release_json" | jq -r --arg name "$ASSET_NAME" '.assets // [] | .[] | select(.name == $name) | .browser_download_url')
          if [ -z "$URL" ] || [ "$URL" = "null" ]; then
            echo "Asset '$ASSET_NAME' not found for tag $TAG" >&2; exit 1
          fi
          echo "url=$URL" >> "$GITHUB_OUTPUT"

      - name: Compute SHA256
        id: sha
        shell: bash
        run: |
          set -euo pipefail
          curl -sSLo asset "${{ steps.meta.outputs.url }}"
          chmod +x asset || true
          SHA=$(sha256sum asset | awk '{print $1}')
          echo "sha=$SHA" >> "$GITHUB_OUTPUT"

      - name: Update Formula
        shell: bash
        env:
          TAG: ${{ steps.meta.outputs.tag }}
          URL: ${{ steps.meta.outputs.url }}
          SHA: ${{ steps.sha.outputs.sha }}
        run: |
          set -euo pipefail
          VERSION="${TAG#v}"
          FORMULA="Formula/pcappuller.rb"
          sed -i.bak -e "s/^  version \".*\"/  version \"$VERSION\"/" \
                      -e "s#^  url \".*\"#  url \"$URL\"#" \
                      -e "s/^  sha256 \".*\"/  sha256 \"$SHA\"/" "$FORMULA"
          rm -f "$FORMULA.bak"

      - name: Commit and Push
        run: |
          set -euo pipefail
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add Formula/pcappuller.rb
          git commit -m "brew: update pcappuller to ${{ steps.meta.outputs.tag }}" || echo "No changes"
          # Rebase onto the latest remote to avoid non-fast-forward rejections
          git pull --rebase origin main || true
          git push origin HEAD:main
